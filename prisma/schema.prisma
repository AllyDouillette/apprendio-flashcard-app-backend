generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  password  String
  Role      Role
  Category  Category[]
  Card      Card[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Profile   Profile[]
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    String
  User      User     @relation(fields: [userId], references: [id])
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  ownerId   String
  Owner     User     @relation(fields: [ownerId], references: [id])
  Card      Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          Int      @id @default(autoincrement())
  ownerId     String
  Owner       User     @relation(fields: [ownerId], references: [id])
  categoryId  Int
  Category    Category @relation(fields: [categoryId], references: [id])
  prompt      String
  answer      String
  hint        String?
  level       Int      @default(0)
  repetitions Int      @default(0)
  lastAskedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
